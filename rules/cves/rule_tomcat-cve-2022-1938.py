import requests
import re
from core.redis import rds
from core.triage import Triage
from core.parser import ScanParser

class VersionChecker:
    def __init__(self):
        self.start_version = "8.5.25"
        self.end_version = "9.0.36"

    def check_version(self, version):
        try:
            version_parts = [int(part) for part in version.split(".")]
        except ValueError:
            print("Invalid version format. Please enter a version like 8.5.25.")
            return False

        if len(version_parts) != 3:
            print("Invalid version format. Please enter a version with three parts.")
            return False

        major, minor, patch = version_parts

        if (major == 8 and minor == 5 and patch >= 25) or \
           (major == 9 and minor == 0 and patch <= 36):
            return True
        else:
            return False

    def check_tomcat_version(self, ip, port):
        url = f"http://{ip}:{port}/docs/"
        
        try:
            response = requests.get(url, timeout=5)
            if response.status_code == 200:
                title_match = re.search(r'<title>([^<]*)</title>', response.text)
                if title_match:
                    version_string = title_match.group(1)

                    # Tìm kiếm thông tin trong dấu ()
                    version_match = re.search(r'\(([^)]+)\)', version_string)
                    if version_match:
                        version_info = version_match.group(1)
                        print(f"Tomcat version: {version_info}")
                        return self.check_version(version_info)

        except requests.RequestException as e:
            print(f"Error: {e}")

        return False


class Rule:
    def __init__(self):
        self.rule = 'CVE_2020_1938'
        self.rule_severity = 4
        self.rule_description = 'This rule checks for Ghost Tomcat (CVE-2020-1938)'
        self.rule_confirm = 'Identified potential exploitation of CVE-2020-1938'
        self.rule_details = ''
        self.rule_mitigation = '''Patch Tomcat to the latest version.
Refer to the following CVE advisory for more information: https://nvd.nist.gov/vuln/detail/CVE-2020-1938'''
        self.intensity = 3

    def check_rule(self, ip, port, values, conf):
        version_checker = VersionChecker()
        t = Triage()
        p = ScanParser(port, values)
    
        domain = p.get_domain()
        module = p.get_module()
    
        result = version_checker.check_tomcat_version(ip, port)

        if result:
            print('phat hien ra GhostCat')
            self.rule_details = 'Identified GhostCat (CVE-2020-1938) '
            rds.store_vuln({
                'ip': ip,
                'port': port,
                'domain': domain,
                'rule_id': self.rule,
                'rule_sev': self.rule_severity,
                'rule_desc': self.rule_description,
                'rule_confirm':self.rule_confirm,
                'rule_details': self.rule_details,
                'rule_mitigation': self.rule_mitigation
            })
        else:
            print("khong check dc ghostcat")
              
        return
